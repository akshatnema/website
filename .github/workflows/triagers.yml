name: Notify Triagers

on:
  pull_request_target:
    types: [opened, reopened, synchronize, edited, ready_for_review]

jobs:
  Notify-triagers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check PR Changes for .md files
        id: md-pr-changes
        uses: tj-actions/changed-files@v11.7
        with:
          files: |
            **.md

      - name: Check PR Changes for .md files
        id: non-md-pr-changes
        uses: tj-actions/changed-files@v11.7
        with:
          files: |
            **.md

      - name: Use Outputs
        run: |
          echo "Any changed: ${{ steps.md-pr-changes.outputs.any_changed }}"
          echo "Any changed: ${{ steps.non-md-pr-changes.outputs.any_changed }}"

      - name: Read triagers.json
        if: steps.md-pr-changes.outputs.any_changed == 'true' || steps.non-md-pr-changes.outputs.any_changed == 'true'
        id: read-triagers-json
        run: |
          mdTriagers=$(jq -r '.mdTriagers[]' triagers.json | tr '\n' ' ')
          codeTriagers=$(jq -r '.codeTriagers[]' triagers.json | tr '\n' ' ')
          echo "md-triagers=$mdTriagers" >> $GITHUB_ENV
          echo "code-triagers=$codeTriagers" >> $GITHUB_ENV

      - name: Create Comment for non-.md files
        if: steps.non-md-pr-changes.outputs.any_changed == 'true'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The PR contains modifications to code files, hence tagging Docs triagers for review and approval. cc: ${steps.read-triagers-json.outputs.code-triagers}`
            })

      - name: Create comment for .md files
        if: steps.md-pr-changes.outputs.any_changed == 'true'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The PR contains modifications to .md files, hence tagging Docs triagers for review and approval. cc: ${steps.read-triagers-json.outputs.md-triagers}`
            })
